
package autonoma.elbuensabor.views;


import autonoma.elbuensabor.models.Plato;
import autonoma.elbuensabor.models.PlatoInternacional;
import autonoma.elbuensabor.models.Restaurante;
import autonoma.elbuensabor.models.Venta;
import autonoma.elbuensabor.models.EstadoFinanciero;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.AbstractCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableModel;

/**
 *
 * @author David Steven Ochoa 
 */
public class MostrarPlato extends javax.swing.JDialog {
    private Restaurante restaurante;
    private VentanaPrincipal ventanaPricipal;
    private ArrayList<Plato> listaplatos;
    private Venta venta;
    private EstadoFinanciero estadoFinanciero;
    private ArrayList<Venta> ventas;
    
    
    /**
     * Creates new form MostrarPlato
     */
    public MostrarPlato(java.awt.Frame parent, boolean modal,Restaurante restaurante, VentanaPrincipal ventana) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        try{
            this.setIconImage(new ImageIcon(getClass().getResource("/autonoma/ElBuenSabor/images/mostrar.png")).getImage());
        }catch (Exception e){
            
        }
        this.restaurante = restaurante;
        this.listaplatos = restaurante.getMenu().getListaplatos();
        this.ventanaPricipal = ventana;
        this.llenarTabla();
        this.ventas = new ArrayList<>();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnActualizar1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblNombreTienda = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnActualizar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        btnVentas = new javax.swing.JButton();
        btnGestionVenta = new javax.swing.JButton();

        btnActualizar1.setBackground(new java.awt.Color(204, 204, 204));
        btnActualizar1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnActualizar1.setForeground(new java.awt.Color(0, 0, 0));
        btnActualizar1.setText("Actualizar");
        btnActualizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizar1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(239, 44, 26));

        lblNombreTienda.setFont(new java.awt.Font("Verdana", 0, 30)); // NOI18N
        lblNombreTienda.setForeground(new java.awt.Color(0, 0, 0));
        lblNombreTienda.setText("Menu El Buen Sabor");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(lblNombreTienda)
                .addContainerGap(165, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(lblNombreTienda)
                .addGap(18, 18, 18))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btnActualizar.setBackground(new java.awt.Color(204, 204, 204));
        btnActualizar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(0, 0, 0));
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnSalir.setBackground(new java.awt.Color(204, 204, 204));
        btnSalir.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(0, 0, 0));
        btnSalir.setText("Volver");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(204, 204, 204));
        btnEliminar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 0, 0));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 102, 51));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        jScrollPane1.setForeground(new java.awt.Color(51, 204, 0));

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProductos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaProductos);

        btnVentas.setBackground(new java.awt.Color(204, 204, 204));
        btnVentas.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnVentas.setForeground(new java.awt.Color(0, 0, 0));
        btnVentas.setText("Ventas");
        btnVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVentasActionPerformed(evt);
            }
        });

        btnGestionVenta.setBackground(new java.awt.Color(204, 204, 204));
        btnGestionVenta.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnGestionVenta.setForeground(new java.awt.Color(0, 0, 0));
        btnGestionVenta.setText("Gestion Venta");
        btnGestionVenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGestionVentaMouseClicked(evt);
            }
        });
        btnGestionVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGestionVentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnActualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGestionVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGestionVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 357, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(3, 3, 3)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        int fila = this.tablaProductos.getSelectedRow();
        if(fila>=0){
            Plato p = this.listaplatos.get(fila);
            ActualizarPlato ventanaActualizar = new ActualizarPlato(this.ventanaPricipal, true, restaurante, this, p);
            ventanaActualizar.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Por favor seleccione el producto que desea eliminar");
        }

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        int fila = this.tablaProductos.getSelectedRow();
         if (fila >= 0) {
            Plato p = this.listaplatos.get(fila); 
            int option = JOptionPane.showConfirmDialog(this, "¿Desea eliminar el plato " + p.getNombre() + " de forma permanente?");
        if (option == JOptionPane.YES_OPTION) {
            this.restaurante.eliminarPlato(p.getIdentificadorUnico()); 
            this.listaplatos = this.restaurante.getMenu().getListaplatos(); 
            this.llenarTabla();
            JOptionPane.showMessageDialog(this, "El plato " + p.getNombre() + " fue eliminado de forma exitosa");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor seleccione el plato que desea eliminar");
    }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizar1ActionPerformed

    private void btnVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVentasActionPerformed
        btnProcesarSeleccionActionPerformed(evt);
        
        
    }//GEN-LAST:event_btnVentasActionPerformed

    private void btnGestionVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGestionVentaActionPerformed
        
    }//GEN-LAST:event_btnGestionVentaActionPerformed

    private void btnGestionVentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGestionVentaMouseClicked
        GestionVenta VentanaGestionVenta = new GestionVenta(this, true, this.estadoFinanciero);
        VentanaGestionVenta.setVisible(true);
    }//GEN-LAST:event_btnGestionVentaMouseClicked
     private void realizarVenta(Plato plato) {
        JOptionPane.showMessageDialog(this, "Venta registrada exitosamente: " + plato.getNombre());
    }
   public void llenarTabla() {
    DefaultTableModel modelDefault = new DefaultTableModel(new Object[]{"Seleccionar", "Id", "Nombre", "Precio", "País de Origen", "Cantidad"}, 0) {
        @Override
        public Class<?> getColumnClass(int columnIndex) {
            if (columnIndex == 0) {
                return Boolean.class; // La primera columna será de tipo Boolean (checkbox)
            }
            if (columnIndex == 5) {
                return Integer.class; // La columna de cantidad será de tipo Integer
            }
            return super.getColumnClass(columnIndex);
        }

        @Override
        public boolean isCellEditable(int row, int column) {
            return column == 0 || column == 5; // Permitir editar las columnas de checkboxes y cantidad
        }

        @Override
        public void setValueAt(Object aValue, int row, int column) {
            super.setValueAt(aValue, row, column); // Actualiza la tabla

            // Solo actualiza si se está editando la columna de Cantidad
            if (column == 5) {
                if (row >= 0 && row < listaplatos.size()) {
                    Plato plato = listaplatos.get(row);
                    // Actualiza la cantidad en el objeto plato
                    plato.setCantidad((Integer) aValue); // Asegúrate de que aValue es del tipo correcto
                }
            }
        }
    };

    this.tablaProductos.setModel(modelDefault);

    for (Plato plato : this.listaplatos) {
        Object[] row = new Object[6];
        row[0] = false; // Por defecto, el checkbox no está seleccionado
        row[1] = plato.getIdentificadorUnico();
        row[2] = plato.getNombre();
        row[3] = plato.getPrecioDeVenta();
        row[4] = plato instanceof PlatoInternacional ? ((PlatoInternacional) plato).getPaisDeOrigen() : "N/A";
        row[5] = plato.getCantidad();

        modelDefault.addRow(row);
    }

    // Agregar un TableCellEditor personalizado con JSpinner
    tablaProductos.getColumnModel().getColumn(5).setCellEditor(new SpinnerEditor());
}


    
class SpinnerEditor extends AbstractCellEditor implements TableCellEditor {
    private final JSpinner spinner;

    public SpinnerEditor() {
        spinner = new JSpinner(new SpinnerNumberModel(1, 1, Integer.MAX_VALUE, 1)); // Valores: mínimo 1, sin máximo, paso 1
    }

    @Override
    public Object getCellEditorValue() {
        return spinner.getValue(); // Retorna el valor seleccionado en el spinner
    }

    @Override
    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        spinner.setValue(value); // Establece el valor actual del spinner
        return spinner;
    }
}

private ArrayList<Plato> obtenerPlatosSeleccionados() {
    ArrayList<Plato> platosSeleccionados = new ArrayList<>();
    DefaultTableModel model = (DefaultTableModel) tablaProductos.getModel();

    for (int i = 0; i < model.getRowCount(); i++) {
        boolean seleccionado = (Boolean) model.getValueAt(i, 0); // Verifica el estado del checkbox
        if (seleccionado) {
            long id = (Long) model.getValueAt(i, 1);
            for (Plato plato : this.listaplatos) {
                if (plato.getIdentificadorUnico()==id) {
                    platosSeleccionados.add(plato);
                    break;
                }
            }
        }
    }
    return platosSeleccionados;
}

private void btnProcesarSeleccionActionPerformed(java.awt.event.ActionEvent evt) {
    ArrayList<Plato> platosSeleccionados = obtenerPlatosSeleccionados();

    if (platosSeleccionados.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor seleccione al menos un plato.");
    } else {
        String mensaje = "Platos seleccionados:\n";
        
        // Crear la nueva venta con los platos seleccionados
        Venta venta = new Venta(platosSeleccionados);
        
        // Agregar la nueva venta a la lista existente
        ventas.add(venta);
        
        // Actualizar el estado financiero (si es necesario)
        estadoFinanciero = new EstadoFinanciero(ventas);

        // Mostrar el ID de la última venta agregada
        JOptionPane.showMessageDialog(this, "Venta procesada con ID: " + venta.getId());

        for (Plato plato : platosSeleccionados) {
            mensaje += "- " + plato.getNombre() + "\n";
        }
        JOptionPane.showMessageDialog(this, mensaje);
    }
}


    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnActualizar1;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGestionVenta;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnVentas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNombreTienda;
    private javax.swing.JTable tablaProductos;
    // End of variables declaration//GEN-END:variables
}
